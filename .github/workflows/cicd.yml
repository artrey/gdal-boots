name: cicd

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gdal_version: [3.0.4+dfsg-1build3, 3.4.1+dfsg-1build4]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Ð¡aching dependencies
        id: cache-pip
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Analyze source code
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends git
          pip install pre-commit==2.20.0
          pre-commit run -a

      - name: Install dependencies
        run: |
          sudo apt-get install -y --no-install-recommends \
            software-properties-common \
            g++ \
            python3-gdal=${{ matrix.gdal_version }} \
            libgdal-dev=${{ matrix.gdal_version }} \
            gdal-bin=${{ matrix.gdal_version }} \
            gdal-data=${{ matrix.gdal_version }}
          pip install setuptools==57.5.0 numpy
          pip install gdal==$(gdal-config --version)
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Test with pytest
        run: pytest --cov=gdal_boots -k 'not visualize'

  release:
    runs-on: ubuntu-latest
    needs:
      - test
    if: ${{ github.repository == 'habibutsu/gdal-boots' && github.event_name == 'push' && github.ref_name == 'main' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Configuring
        run: |
          pip install python-semantic-release==7.31.3
          git fetch --tags
          git config --global user.name "semantic-release"
          git config --global user.email "semantic-release"

      - name: Python Semantic Release
        env:
          CI: 'true'
          GITHUB_ACTIONS: 'true'
          REPOSITORY_USERNAME: ${{ secrets.PYPI_USER }}
          REPOSITORY_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          REPOSITORY_URL: https://pypi.onesoil.ai
        run: semantic-release publish -D branch=${{ github.ref_name }}
